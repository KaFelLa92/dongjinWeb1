[ 새 프로젝트 ]
    JAVA 프로젝트 선택
    1. 이름 : 아무거나
    2. 위치 : 아무곳이나
    3. 시스템빌드 : Gradle
    4. JDK : 17
    5. Gradle : Grooby
    [생성]

[ 폴더 및 파일 구성 ]
    .idea폴더         : 인텔리제이 세팅 파일
    .src폴더          : (개발자가 작성한) 코드 파일
    -> main 폴더
    -> -> java폴더    : 백엔드 위주 파일
    -> -> resources  : 프론트엔드, 부가파일 ㅡㄷㅇ
    build.gradle     : 스프링 설정

[ 스프링 설정 ]
    0. https://start.spring.io/ 접속
    1. project : Gradle - Grooby
    2. Language : Java
    3. Spring Boot : 3.5.4
    4. Project Metadata : 프로젝트 부가 정보[기본값]
    5. Packaging : Jar
    6. Java : 17
    7. Dependencies : MySQL Driver, Spring Web 각각 검색 후 [선택]
    8. EXPLORE 클릭 후 나오는 코드를 build.gradle에 붙여넣기

[ 프로젝트 ]
    1. build.gradle에서 우측 상단에 새로고침 코끼리 클릭. (ctrl + shift + O)
    2. AppStart 실행
    *. Gradle 환경에서는 jar 파일 안 써도 됨

[ 스프링 실행 방법 ]
    1. AppStart 클래스 위에 @SpringBootApplication
    2. AppStart 클래스 내 main함수 안에서
        - SpringApplication.run( 현재클래스명.class );
        예] SpringApplication.run ( AppStart.class );

        @SpringBootApplication
        public class AppStart {
            public static void main(String[] args) {
                SpringApplication.run(AppStart.class);

            } // main end
        } // class end

        확인 : AppStart 클래스 실행 후 브라우저에서 https://localhost:8080/ 접속
            " Whitelabel Error Page " : 문구 나오면 정상
            " 사이트에 연결할 수 없음 " : 스프링 서버가 꺼진 상태
    3. Dao 코드 유지하고 Controller 클래스
    3-1. Controller 클래스명 위에 @RestController
    3-2. 각 기능 메소드 위에
            저장 메소드(boardWrite) 위에 @PostMapping
            조회 메소드(boardPrint) 위에 @GetMapping

[ 스프링 ]
    1. 정의 : 스프링은 자바 기반 엔터프라이즈급 어플리케이션 개발을 위한 프레임워크
    2. 활용처 : 전자정부프레임워크 (대한민국 개발 표준)
    3. 특징 : IOC/DI 객체의존성 , AOP 로직분리 모듈(레고)화 , MVC 필수 제공

[ 스프링 부트 ]
    1. 스프링 프레임워크를 빠르게 사용할 수 있도록 자동설정기반의 스타터 프레임워크
    2. 활용처 : 복잡한 설정을 제공 받는다.
    3. 특징 ( 스프링부트 안에 스프링 포함 )
    4. 웹서버 : 내장 Tomcat 제공한다. Tomcat이란? 자바 회사에서 만든 웹 관련 라이브러리 포함한 소프트웨어
        Starting Servlet engine: [Apache Tomcat/10.1.43]

[ 그레이들 ]
    1. 정의 : 그레이들은 자바 기반의 빌드 자동화 소프트웨어
    2. 특징 : 의존성 관리, 배포, 패키징을 쉽게 코드 한 줄로 자동처리해준다. (단 한국 라이브러리 없다)
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-web' // 스프링부트 웹 설치
            runtimeOnly 'com.mysql:mysql-connector-j'
            testImplementation 'org.springframework.boot:spring-boot-starter-test'
            testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        }

[ 코드 ]
    : 명령어

[ 라이브러리 ]
    : 명령어들을 집합(메소드)해서 .jar 확장자로 만든 집합 , 미리 만들어진 코드
    예] 도구

[ 프레임워크 ]
    : 라이브러리 + 개발에 필요한 환경설정까지
    예] 집

